/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { FundMe, FundMeInterface } from "../../contracts/FundMe";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "priceFeedAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FundMe__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "MINIMUM_USD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cheaperWithdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "funder",
        type: "address",
      },
    ],
    name: "getAddressToAmountFunded",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getFunder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPriceFeed",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200210b3803806200210b833981810160405281019062000037919062000227565b6200006b7f476c6bc39cff5f0501104689f127262c1e873059699e33c7eff86a6bec84838560001b620001ba60201b60201c565b6200009f7fda81e4ed3d085906a5e71adf59d7f62c63b380d3d3aa20a802c412e2ed696cef60001b620001ba60201b60201c565b620000d37ffe32c4a00cb2af850ca8891e0053ffe8e6b8e36e693c685103211e13884f527260001b620001ba60201b60201c565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250506200013e7fb954a4f878c1a65b6280554eb8cf4d322e0e836a5db2c50ea0a0b6a9c30c208f60001b620001ba60201b60201c565b620001727f8053d96e706a1db54ce04a75d6d6aac8d3f0b042cbe614949f49234f9d9d0ad760001b620001ba60201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000259565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001ef82620001c2565b9050919050565b6200020181620001e2565b81146200020d57600080fd5b50565b6000815190506200022181620001f6565b92915050565b60006020828403121562000240576200023f620001bd565b5b6000620002508482850162000210565b91505092915050565b60805160601c611e7e6200028d600039600081816102f80152818161090f01528181610d1b01526111fc0152611e7e6000f3fe60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461012a578063b60d428814610155578063be2693f01461015f578063d7b4750c146101695761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100d4578063893d20e8146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a2919061180c565b6101a6565b6040516100b49190611852565b60405180910390f35b3480156100c957600080fd5b506100d2610272565b005b3480156100e057600080fd5b506100e961087a565b6040516100f69190611852565b60405180910390f35b34801561010b57600080fd5b50610114610887565b604051610121919061187c565b60405180910390f35b34801561013657600080fd5b5061013f610933565b60405161014c91906118f6565b60405180910390f35b61015d6109e1565b005b610167610c95565b005b34801561017557600080fd5b50610190600480360381019061018b919061193d565b611342565b60405161019d919061187c565b60405180910390f35b60006101d47f9bcb186e120f268fd250308f61cbfcc34d54cc109da8b2e857eef6cd90c7b71260001b61140e565b6102007fe640d62d6e3962af0e30e3a3386b4975a12f675e4b0c04950fc8be5530aad29560001b61140e565b61022c7fe8c391e2e28e9b823be42f25d1217f8a348a4d38da532324262558f91836559d60001b61140e565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61029e7f8434a9e9e58d11b2ee5f1f099f59254d5bbbcb2490226f6a506555a65205935260001b61140e565b6102ca7fa0e040c71dd78cef2ba2788344511469ed53c82efc7c97139dfdab7db22972fd60001b61140e565b6102f67f1e372b0fee7ce4b77a134f02868d81c402bd686f0b96ba97894209b7718a62dc60001b61140e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d3576103757f28058fb442cd121a820564736ec0365832a76b458e436373a0648ae08df4898660001b61140e565b6103a17fe024db6d49e44c680e6309e5cc089fb11512ca6d58319bb2eaff2ef75521ebd160001b61140e565b6040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103ff7f72b4c9567d9b66df608c81ced0f6ee9e865e430aff5f076c90abddf6c49ec74760001b61140e565b61042b7fc0889a798fda0bb0b703d36f3cd15464357b64106dc4ca8c76a7c0f8e6b6e1c560001b61140e565b6104577f51a323db59423425d89e44eabe511c6b328d13b1cfa82b51ce2f9844739fd4f760001b61140e565b6104837f55bc653371b1c7e8bb00cbdf68a9e58302d2d4df8db1aff8c7316277e929ad6160001b61140e565b6104af7f404c82cceb749e11c09d18323e1c4482ba0d53ab26eac487056b33b6e6470a8660001b61140e565b60005b60018054905081101561060a576104eb7fb61ce599cc9a716d9f11f9299a8e9d9fb41c0fda12e525418f800d5066b90b0560001b61140e565b6105177f827a5fa64d85210912b69fceaa65b0a26067437007a9a3ddb96631f7e72e9d8260001b61140e565b60006001828154811061052d5761052c61196a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506105867fbaf4491ca0c5a5fbbca9757000c3936fe8e201fc286eb969f2a1dee4ad95bd6860001b61140e565b6105b27f73ec8f3af062500807bf736bd29f08584be5931c772e0aab97d0a78f6ee8fe6c60001b61140e565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610602906119c8565b9150506104b2565b506106377f1540c576114a8565507a3b1d2b2615e50e9703e57da09708e97bc12b88cae24360001b61140e565b6106637f4a00b162de78665ff8f0b65350b86e35e5dd73c5ff7d4116bb6f46bf4fb5199660001b61140e565b600067ffffffffffffffff81111561067e5761067d611a11565b5b6040519080825280602002602001820160405280156106ac5781602001602082028036833780820191505090505b50600190805190602001906106c2929190611702565b506106ef7fbf45b5af00cdc0bfee3671085e3243b7d37650cafcbd0652f72b795046c18b6460001b61140e565b61071b7f40c6536e2355e32da211ee916826450933bb507ea472a2922be1d70366b5fb9b60001b61140e565b60003373ffffffffffffffffffffffffffffffffffffffff164760405161074190611a71565b60006040518083038185875af1925050503d806000811461077e576040519150601f19603f3d011682016040523d82523d6000602084013e610783565b606091505b505090506107b37f6d468c0db27f3abe56063070490f388a694d469e78d155eaee6ef90d791b582860001b61140e565b6107df7f8e4758e067e73b1431d0d79b6f13763a7fecdc160bcde974ed52f0064cab349360001b61140e565b61080b7fed865e544954d64f48298de0c8c461a32b0d4fbf801ff9fd5e1d013e223e590b60001b61140e565b8061084b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084290611ae3565b60405180910390fd5b6108777f3d72dfde668e3237bac1a476b281dc5a5eef04f2b678a9c45b28438e21365cec60001b61140e565b50565b6802b5e3af16b188000081565b60006108b57f32ed9def8717ba038f5bae18e157e484239458ad594a18fd8f4d28446f625d2060001b61140e565b6108e17ffd4596dd338604dbb5be81cfaaa16b4d6e2a8161078e48e13fe4a3413fbf7e9e60001b61140e565b61090d7ff6d784e8f679b354642f70dc051ece110da77cf40885b3a7b194f436ee7f614460001b61140e565b7f0000000000000000000000000000000000000000000000000000000000000000905090565b60006109617f041315daaabc74fd2d9a8fa0849b2fe3c85272a4788b62c7a85bdad9b534a09860001b61140e565b61098d7fc723f250d4152a10fe737817f42857b32a81be60d1949604c7984562de15213660001b61140e565b6109b97fb951498e28aaff01478b77580cdbd6fc9ac906bd52e26fe98eabb3ad17a9617f60001b61140e565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610a0d7f2eea7583ab532a029623cd8234a4a38de1a3c668f745a8815b92ecaf2b61c03460001b61140e565b610a397f314bfd0edd780b3d61c16db76b46784a9839c19929127b2b17abf41be15e2e1860001b61140e565b610a657f075050635cca66544e1c04b3a85405f00a9ffcf99235bebac96828de75014de760001b61140e565b610a917fe356f38c985f90797f1e4b1e7ea34be74c213a96e89a2dacaa32845a2aa210ee60001b61140e565b6802b5e3af16b1880000610ad0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461141190919063ffffffff16565b1015610b11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0890611b4f565b60405180910390fd5b610b3d7fd6794b3b4a3e34754ce5d50083367341b9c42041cd009ea8cc57096e91bb8a2660001b61140e565b610b697f6a9b7e436a557d92e076a4d533ddef27d06a9da07780cef519dbc9cb32f3e40160001b61140e565b610b957fc0af555ad8b368a53b709fbd344ad68db49b27f938f29126102f5ffda70de1d460001b61140e565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610c047fac78f8db88fefaba641c3f3adb126812858cbbb4aaa9250d74ec7717472b191460001b61140e565b610c307ff428c521d9ae4967aa5ae801df0edbdae52d800069410c887ffe5732f52d7b7060001b61140e565b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610cc17f8434a9e9e58d11b2ee5f1f099f59254d5bbbcb2490226f6a506555a65205935260001b61140e565b610ced7fa0e040c71dd78cef2ba2788344511469ed53c82efc7c97139dfdab7db22972fd60001b61140e565b610d197f1e372b0fee7ce4b77a134f02868d81c402bd686f0b96ba97894209b7718a62dc60001b61140e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610df657610d987f28058fb442cd121a820564736ec0365832a76b458e436373a0648ae08df4898660001b61140e565b610dc47fe024db6d49e44c680e6309e5cc089fb11512ca6d58319bb2eaff2ef75521ebd160001b61140e565b6040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e227f72b4c9567d9b66df608c81ced0f6ee9e865e430aff5f076c90abddf6c49ec74760001b61140e565b610e4e7fc0889a798fda0bb0b703d36f3cd15464357b64106dc4ca8c76a7c0f8e6b6e1c560001b61140e565b610e7a7facdf5023817a8a0ecb7763457c9a0c01d0a9142e6818e5281fb3b9b843e25cf760001b61140e565b610ea67f2fd712f59450de90f3ae2b3ab5d63514e8aa92b345488f2d548ca30472db7c7060001b61140e565b610ed27f098a064d0a8cd5562b55ecd59b045c31ccc4a4c0e9bcc29c5978de2641f92c3960001b61140e565b60006001805480602002602001604051908101604052809291908181526020018280548015610f5657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610f0c575b50505050509050610f897fbaafb87fde2a7033f9e266968636a26adf05eaa754b20ce35cff13ba5fdbb9ae60001b61140e565b610fb47e20e0ee995f454c9a9c1f5d946a6eeb1e02d2cf81dfbd6da960fc849326ea5860001b61140e565b60005b81518110156110e757610fec7f3b61191407b5358fc9719f12aa050df5ea5185b4a0a3ca1f618952c324d6bd7f60001b61140e565b6110187f65b0acd1fac18375b26ba887a72deda0e78d8b43830ca10c06ba5f2c7161dcbb60001b61140e565b600082828151811061102d5761102c61196a565b5b602002602001015190506110637f517b874b8ae398b6d092892a733363044c09a2066b8e5d2e9480782c71cc7b2560001b61140e565b61108f7f139102204d5789c6c23b67b49a909ebdcf25a50f1f794b600d1c39335cbcf7a860001b61140e565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806110df906119c8565b915050610fb7565b506111147fd9d7758340d8caebec27fd05be84f359b225c5def9ec265c4aab37f4e32f569060001b61140e565b6111407fdcf172ce1c8993bbb844816ab383837f43053c4771a71d5d9ad0eca1d8f7e4ad60001b61140e565b600067ffffffffffffffff81111561115b5761115a611a11565b5b6040519080825280602002602001820160405280156111895781602001602082028036833780820191505090505b506001908051906020019061119f929190611702565b506111cc7f457fd212202910f8e95fc31a56ece7b849c195a076a362a7c9607f76bf0057b060001b61140e565b6111f87f6c243b14084d9d25b5671d83d4daf1d75fc808855f960212df503cadd2d8930e60001b61140e565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161123e90611a71565b60006040518083038185875af1925050503d806000811461127b576040519150601f19603f3d011682016040523d82523d6000602084013e611280565b606091505b505090506112b07f4e4495e517c13b779823cdd62bbbbd31111ceca6f5bb760ecec5424fa1929dbb60001b61140e565b6112dc7fcaaff235dd7271544d5ce5035b8c2a1f1cef36f134215e7d3e58804eaa333b2360001b61140e565b6113087f92ef21cf240b7ce06fc78a223c673def381688e921ceb8ae78938f9d866b17c860001b61140e565b8061131257600080fd5b61133e7f05579924d2e5c531e88508138c1b6ed7f9bc10ca28ae1c83e3b30832b480143360001b61140e565b5050565b60006113707fba1729ebf0e91c268cb26c7e2faa7012c2c8c44341bdcad47b7a084aeef9879d60001b61140e565b61139c7f196abdaf38c1ba16acad37c25ae047e077e1cfd36c6557aec76c0c4e3e6e729760001b61140e565b6113c87fd5a90f26b040a858df4c6425ed8cfee1c28d1c9ff41e75fb28b7647269fdeac960001b61140e565b600182815481106113dc576113db61196a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b50565b600061143f7f0f3807f7809c0608b0716866fdeb37d23989224d2cba11e41da26861f506a99c60001b611582565b61146b7f3f268514dd015df6c10eab5ae7ed2489f672ecfffe3d98ba8718e99a915f02c760001b611582565b6114977feda32ed3ae4716142a8d73b1f04c2965b2c10aea5a44d25d3ce8b0b6cce5be4660001b611582565b60006114a283611585565b90506114d07f2021233426154e7c59dc102a3dd0ae7168f62b0ba7417912d1681ff7a0bf34d660001b611582565b6114fc7f2fdcaf1207df282b3106498a14696051439cc8a2f32a7a953349d8fc665e253360001b611582565b6000670de0b6b3a764000085836115139190611b6f565b61151d9190611bf8565b905061154b7f6bf5e1298cd28b1e1dfdb3a1707351aa011493e93ae07d45ac625cc6c454951760001b611582565b6115777f8d935bdfb1e70e87d0ec74cd3f0814622b3f36fb9ea0670bd8b303e08f1f508460001b611582565b809250505092915050565b50565b60006115b37f586d717a039d9757ad8faabda8d1a66b4d1ce2a7748aa330d40d723a8dc5b3b760001b611582565b6115df7fe16b213e38c9f648a73e0be55a00287495f65b56a9aed8d4c849035d6ecbd58160001b611582565b61160b7f7d96d17f56af50ec08dcec816b3f4aff2152772c38c8626863611c7e8b81d71760001b611582565b60008273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561165357600080fd5b505afa158015611667573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168b9190611cb6565b5050509150506116bd7f63ae1540e0f9496b7092b820232e0f1887f16d36e6dc1033b11cf010a515164e60001b611582565b6116e97f0e80aee64546f88c2050c48ce457c5d84f53b5075499e11ae8f9b07b259fa40560001b611582565b6402540be400816116fa9190611d31565b915050919050565b82805482825590600052602060002090810192821561177b579160200282015b8281111561177a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190611722565b5b509050611788919061178c565b5090565b5b808211156117a557600081600090555060010161178d565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117d9826117ae565b9050919050565b6117e9816117ce565b81146117f457600080fd5b50565b600081359050611806816117e0565b92915050565b600060208284031215611822576118216117a9565b5b6000611830848285016117f7565b91505092915050565b6000819050919050565b61184c81611839565b82525050565b60006020820190506118676000830184611843565b92915050565b611876816117ce565b82525050565b6000602082019050611891600083018461186d565b92915050565b6000819050919050565b60006118bc6118b76118b2846117ae565b611897565b6117ae565b9050919050565b60006118ce826118a1565b9050919050565b60006118e0826118c3565b9050919050565b6118f0816118d5565b82525050565b600060208201905061190b60008301846118e7565b92915050565b61191a81611839565b811461192557600080fd5b50565b60008135905061193781611911565b92915050565b600060208284031215611953576119526117a9565b5b600061196184828501611928565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006119d382611839565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611a0657611a05611999565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000611a5b600083611a40565b9150611a6682611a4b565b600082019050919050565b6000611a7c82611a4e565b9150819050919050565b600082825260208201905092915050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000611acd600b83611a86565b9150611ad882611a97565b602082019050919050565b60006020820190508181036000830152611afc81611ac0565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000611b39601b83611a86565b9150611b4482611b03565b602082019050919050565b60006020820190508181036000830152611b6881611b2c565b9050919050565b6000611b7a82611839565b9150611b8583611839565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611bbe57611bbd611999565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611c0382611839565b9150611c0e83611839565b925082611c1e57611c1d611bc9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b611c4881611c29565b8114611c5357600080fd5b50565b600081519050611c6581611c3f565b92915050565b6000819050919050565b611c7e81611c6b565b8114611c8957600080fd5b50565b600081519050611c9b81611c75565b92915050565b600081519050611cb081611911565b92915050565b600080600080600060a08688031215611cd257611cd16117a9565b5b6000611ce088828901611c56565b9550506020611cf188828901611c8c565b9450506040611d0288828901611ca1565b9350506060611d1388828901611ca1565b9250506080611d2488828901611c56565b9150509295509295909350565b6000611d3c82611c6b565b9150611d4783611c6b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615611d8657611d85611999565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615611dc357611dc2611999565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615611e0057611dff611999565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615611e3d57611e3c611999565b5b82820290509291505056fea264697066735822122015da3f0d094f9f15fa1cfc10985188480e87e23a19236e7bf256710c16d4621464736f6c63430008080033";

type FundMeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundMeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FundMe__factory extends ContractFactory {
  constructor(...args: FundMeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    priceFeedAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FundMe> {
    return super.deploy(priceFeedAddress, overrides || {}) as Promise<FundMe>;
  }
  override getDeployTransaction(
    priceFeedAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(priceFeedAddress, overrides || {});
  }
  override attach(address: string): FundMe {
    return super.attach(address) as FundMe;
  }
  override connect(signer: Signer): FundMe__factory {
    return super.connect(signer) as FundMe__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundMeInterface {
    return new utils.Interface(_abi) as FundMeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FundMe {
    return new Contract(address, _abi, signerOrProvider) as FundMe;
  }
}
